#!/usr/bin/env python3

import argparse
import sys
import os
import pkg_resources
sys.path.append('../')
sys.path.append('./')
from  saffrontree.SaffronTree import SaffronTree
from  saffrontree.InputTypes import InputTypes

'''The main entry point for running SaffronTree. All the work is done in the classes.'''

version = ''
try:
	version = pkg_resources.get_distribution("saffrontree").version
except pkg_resources.DistributionNotFound:
	version = 'x.y.z'

parser = argparse.ArgumentParser(
	description = 'SaffronTree: Reference free rapid phylogenetic tree construction from raw read data or assembled sequences',
	usage = 'saffrontree [options] output_directory *.fastq.gz')
parser.add_argument('output_directory', help='Output directory', type=InputTypes.is_output_directory_valid )
parser.add_argument('input_files', help='FASTQ/FASTA files which may be gzipped', nargs='+', type=InputTypes.is_fastq_valid)
parser.add_argument('--kmer',	                     '-k', help='Kmer to use, depends on read length [%(default)s]', type=InputTypes.is_kmer_valid,  default = 31)
parser.add_argument('--min_kmers_threshold',	     '-m', help='Exclude k-mers occurring less than this [%(default)s]', type=InputTypes.is_min_kmers_threshold_valid,  default = 5)
parser.add_argument('--max_kmers_threshold',	     '-x', help='Exclude k-mers occurring more than this [%(default)s]', type=InputTypes.is_max_kmers_threshold_valid,  default = 255)
parser.add_argument('--threads',                     '-t', help='Number of threads [%(default)s]', type=InputTypes.is_threads_valid,  default = 1)
parser.add_argument('--keep_files',                  '-f', action='store_true', help='Keep intermediate files [%(default)s]')
parser.add_argument('--verbose',                     '-v', action='store_true', help='Turn on more debugging output [%(default)s]')
parser.add_argument('--version', action='version', version=str(version))

options = parser.parse_args()

saffron_tree = SaffronTree(options)
saffron_tree.run()
